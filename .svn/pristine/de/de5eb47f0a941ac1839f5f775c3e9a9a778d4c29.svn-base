// Hàm để ẩn tất cả các form và khu vực kết quả
function hideAllElements() {
    const forms = ["input-sn-form", "custom-form", "update-data-form"];
    const results = ["input-sn-result", "create-task-result", "update-data-result"];

    forms.forEach(formId => {
        const form = document.getElementById(formId);
        if (form) {
            form.classList.add("hidden");
        } else {
            console.warn(`Form with ID ${formId} not found.`);
        }
    });

    results.forEach(resultId => {
        const result = document.getElementById(resultId);
        if (result) {
            result.classList.add("hidden");
        } else {
            console.warn(`Result with ID ${resultId} not found.`);
        }
    });
}

// Ẩn tất cả các form và khu vực kết quả ngay lập tức
hideAllElements();

/** 🔥 Lấy currentUsername từ thẻ HTML */
function getCurrentUsername() {
    const usernameElement = document.querySelector(".d-none.d-md-block.ps-2");
    return usernameElement ? usernameElement.textContent.trim() : null;
}

// Ẩn tất cả các form và khu vực kết quả khi trang tải lần đầu
document.addEventListener("DOMContentLoaded", function () {
    console.log("DOMContentLoaded triggered");
    hideAllElements();

    // Xử lý sự kiện khi nhấn nút "INPUT SN"
    document.getElementById("input-sn-btn").addEventListener("click", async function () {
        // Thu thập dữ liệu từ các trường
        const snInput = document.getElementById("sn-input").value.trim();
        const description = document.getElementById("description-input").value.trim();
        const approveScrapPerson = document.getElementById("NVmember-input").value.trim();
        const purpose = document.getElementById("Scrap-options").value;
        const currentUsername = getCurrentUsername(); // Lấy username từ HTML

        if (!currentUsername) {
            alert("Failed to get the current username.");
            return;
        }
        // Kiểm tra dữ liệu đầu vào
        if (!snInput) {
            alert("Vui lòng nhập ít nhất một Serial Number.");
            return;
        }
        if (!description) {
            alert("Vui lòng nhập mô tả (Description).");
            return;
        }
        if (!approveScrapPerson) {
            alert("Vui lòng nhập tên người phê duyệt (NV person approve).");
            return;
        }
        if (purpose !== "0" && purpose !== "1") {
            alert("Vui lòng chọn loại scrap (Purpose).");
            return;
        }

        // Tách danh sách SN từ textarea (mỗi dòng một SN)
        const sNs = snInput.split("\n").map(sn => sn.trim()).filter(sn => sn);

        // Tạo dữ liệu để gửi đến API
        const requestData = {
            sNs: sNs,
            createdBy: currentUsername, // Giá trị mặc định từ hệ thống
            description: description,
            approveScrapPerson: approveScrapPerson,
            purpose: purpose
        };

        try {
            // Gửi yêu cầu đến API
            const response = await fetch("http://localhost:5025/api/Scrap/input-sn", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(requestData)
            });

            // Kiểm tra phản hồi từ API
            const result = await response.json();

            // Hiển thị kết quả trong khu vực input-sn-result
            const resultDiv = document.getElementById("input-sn-result");
            if (response.ok) {
                // Thành công
                resultDiv.innerHTML = `
                            <div class="alert alert-success">
                                <strong>${result.message}</strong><br>
                                Internal Task: ${result.internalTask}
                            </div>
                        `;
            } else {
                // Lỗi từ API
                resultDiv.innerHTML = `
                            <div class="alert alert-danger">
                                <strong>Lỗi:</strong> ${result.message}
                            </div>
                        `;
            }
        } catch (error) {
            // Lỗi kết nối hoặc xử lý
            const resultDiv = document.getElementById("input-sn-result");
            resultDiv.innerHTML = `
                        <div class="alert alert-danger">
                            <strong>Lỗi:</strong> Không thể kết nối đến API. Vui lòng kiểm tra lại.
                        </div>
                    `;
            console.error("Error:", error);
        }
    });
});

// Xử lý sự kiện thay đổi giá trị trong dropdown
document.getElementById("search-options").addEventListener("change", async function () {
    console.log("Dropdown changed to:", this.value);
    // Ẩn tất cả các form và khu vực kết quả trước
    hideAllElements();

    // Hiển thị form và khu vực kết quả tương ứng dựa trên giá trị được chọn
    const selectedValue = this.value;

    if (selectedValue === "INPUT_SN") {
        document.getElementById("input-sn-form").classList.remove("hidden");
        document.getElementById("input-sn-result").classList.remove("hidden");
    } else if (selectedValue === "CREATE_TASK_FORM") {
        document.getElementById("custom-form").classList.remove("hidden");
        document.getElementById("create-task-result").classList.remove("hidden");
        // Gọi API và hiển thị bảng
        try {
            const response = await fetch("http://localhost:5025/api/Scrap/get-scrap-status-zero", {
                method: "GET",
                headers: {
                    "Content-Type": "application/json"
                }
            });

            const result = await response.json();
            const resultDiv = document.getElementById("create-task-result");

            if (response.ok) {
                // Sắp xếp dữ liệu theo CreateTime (từ cũ đến mới)
                const sortedData = result.sort((a, b) => new Date(b.CreateTime) - new Date(a.CreateTime));

                // Xây dựng bảng HTML
                let tableHtml = `
                            <table>
                                <thead>
                                    <tr>
                                        <th class="checkbox-column"><input type="checkbox" id="select-all"></th>
                                        <th>Internal Task</th>
                                        <th>Description</th>
                                        <th>Approve Scrap Person</th>
                                        <th>KanBan Status</th>
                                        <th>Create Time</th>
                                        <th>Create By</th>
                                        <th>Apply Task Status</th>
                                        <th>Total Q'ty</th>
                                    </tr>
                                </thead>
                                <tbody>
                        `;

                sortedData.forEach(item => {
                    tableHtml += `
                                <tr>
                                    <td class="checkbox-column"><input type="checkbox" name="task-checkbox" value="${item.InternalTask}"></td>
                                    <td>${item.internalTask}</td>
                                    <td>${item.description}</td>
                                    <td>${item.approveScrapPerson}</td>
                                    <td>${item.kanBanStatus}</td>
                                    <td>${item.createTime}</td>
                                    <td>${item.createBy}</td>
                                    <td>${item.applyTaskStatus}</td>
                                    <td>${item.totalQty}</td>
                                </tr>
                            `;
                });

                tableHtml += `
                                </tbody>
                            </table>
                        `;

                resultDiv.innerHTML = tableHtml;

                // Thêm sự kiện cho checkbox "Select All"
                document.getElementById("select-all").addEventListener("change", function () {
                    const checkboxes = document.getElementsByName("task-checkbox");
                    checkboxes.forEach(checkbox => {
                        checkbox.checked = this.checked;
                    });
                });
            } else {
                // Lỗi từ API
                resultDiv.innerHTML = `
                            <div class="alert alert-danger">
                                <strong>Lỗi:</strong> ${result.message}
                            </div>
                        `;
            }
        } catch (error) {
            // Lỗi kết nối hoặc xử lý
            const resultDiv = document.getElementById("create-task-result");
            resultDiv.innerHTML = `
                        <div class="alert alert-danger">
                            <strong>Lỗi:</strong> Không thể kết nối đến API. Vui lòng kiểm tra lại.
                        </div>
                    `;
            console.error("Error:", error);
        }
    } else if (selectedValue === "UPDATE_DATA") {
        document.getElementById("update-data-form").classList.remove("hidden");
        document.getElementById("update-data-result").classList.remove("hidden");
    }
    // Nếu là giá trị mặc định (SELECT FUNCTION), tất cả form và khu vực kết quả sẽ giữ trạng thái ẩn
});