// Hiển thị spinner
function showSpinner() {
    document.getElementById("spinner-overlay").style.display = "flex";
}
// Ẩn spinner
function hideSpinner() {
    document.getElementById("spinner-overlay").style.display = "none";
    removeBackdrop()
}

document.addEventListener("DOMContentLoaded", function () {
    fetch("http://10.220.130.119:9090/api/product/total") // Đường dẫn API
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                document.getElementById("total-stock").textContent = data.totalCount;
            } else {
                console.error("API Error:", data.message);
                document.getElementById("total-stock").textContent = "Error";
            }
        })
        .catch(error => {
            console.error("Fetch Error:", error);
            document.getElementById("total-stock").textContent = "Error";
        });
});

function removeBackdrop() {
    document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
    document.body.classList.remove('modal-open');
}
document.addEventListener("DOMContentLoaded", () => {
    const exportButton = document.getElementById("export-all-btn");
    if (exportButton) {
        exportButton.addEventListener("click", async () => {
            try {
                showSpinner();
                exportButton.disabled = true; // Vô hiệu hóa nút trong khi xử lý
                exportButton.textContent = "Đang xuất...";

                const response = await fetch('http://10.220.130.119:9090/api/Search/ExportAllDataToExcel', {
                    method: 'GET',
                    headers: {
                        'Accept': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
                    }
                });

                if (!response.ok) {
                    throw new Error("Không thể xuất dữ liệu!");
                }

                const blob = await response.blob();
                const url = window.URL.createObjectURL(blob);

                // Tạo link download
                const link = document.createElement('a');
                link.href = url;
                link.download = `AllData-${new Date().toISOString()}.xlsx`;
                document.body.appendChild(link);
                link.click();
                link.remove();
                hideSpinner(); //Hide Spinner
                showSuccess("Success!")
            } catch (error) {
                hideSpinner();
                console.error("Lỗi khi xuất Excel:", error.message);
                showError("Error!");
            } finally {
                hideSpinner();
                exportButton.disabled = false; // Kích hoạt lại nút
                exportButton.textContent = "Xuất All";
            }
        });
    } else {
        console.error("Không tìm thấy nút xuất dữ liệu với ID 'export-all-btn'");
    }
});

//async function fetchTopModelsChart() {
//    const response = await fetch("http://10.220.130.119:9090/api/product/top_models");
//    const data = await response.json();

//    if (!data.success || !Array.isArray(data.topModels)) {
//        console.error("Lỗi dữ liệu API:", data);
//        document.getElementById("top-model-chart").innerHTML = "<p>Không có dữ liệu.</p>";
//        return;
//    }

//    const categories = data.topModels.map(item => item.modelName);
//    const values = data.topModels.map(item => item.count);

//    const option = {
//        legend: { bottom: 0 },
//        tooltip: { trigger: "axis" },
//        xAxis: {
//            type: "category",
//            data: categories,
//            axisLabel: {
//                rotate: 0,         // Không xoay nhãn
//                fontSize: 10,      // Kích thước chữ
//                color: "#000000",  // Màu chữ
//                formatter: function (value) {
//                    return value.length > 10 ? value.substring(0, 10) + "..." : value;
//                }
//            }
//        },
//        yAxis: { name: "Số lượng" },
//        series: [
//            {
//                type: "bar",
//                name: null,
//                color: "#2eca6a",
//                barWidth: 30, // ✅ Tăng độ rộng cột
//                data: values,
//                itemStyle: { borderRadius: [5, 5, 5, 5] }, // ✅ Bo tròn góc trên
//                label: { show: true, position: "top", color: "#000", fontWeight: "bold" }
//            }
//        ]
//    };

//    // Vẽ biểu đồ
//    const chart = echarts.init(document.getElementById("top-model-chart"));
//    chart.setOption(option);
//}

// Gọi hàm khi trang tải
async function fetchTopModelsChart() {
    const response = await fetch("http://10.220.130.119:9090/api/product/top_models");
    const data = await response.json();

    if (!data.success || !Array.isArray(data.topModels)) {
        console.error("Lỗi dữ liệu API:", data);
        document.getElementById("top-model-chart").innerHTML = "<p>Không có dữ liệu.</p>";
        return;
    }

    const categories = data.topModels.map(item => item.modelName);
    const values = data.topModels.map(item => item.count);

    const option = {
        grid: {
            left: "5%",   // ✅ Tăng khoảng cách lề trái
            right: "5%",  // ✅ Tránh cột bị tràn ra ngoài
            bottom: "10%"
        },
        legend: { bottom: 0 },
        tooltip: { trigger: "axis" },
        xAxis: {
            type: "category",
            data: categories,
            axisLabel: {
                rotate: 0,        // ✅ Xoay chữ nhẹ cho dễ đọc
                fontSize: 10,
                color: "#000000",
                formatter: function (value) {
                    return value.length > 10 ? value.substring(0, 10) + "..." : value;
                }
            }
        },
        yAxis: { name: "Số lượng" },
        series: [
            {
                type: "bar",
                name: "Số lượng",
                color: "#2eca6a",
                barWidth: "45%",  // ✅ Điều chỉnh độ rộng cột để có khoảng cách
                barCategoryGap: "30%", // ✅ Giãn khoảng cách giữa các cột
                data: values,
                itemStyle: { borderRadius: [5, 5, 0, 0] }, // ✅ Bo tròn góc trên
                label: { show: true, position: "top", color: "#000", fontWeight: "bold" }
            }
        ]
    };

    // ✅ Vẽ biểu đồ & tự động thu nhỏ theo màn hình
    const chartContainer = document.getElementById("top-model-chart");
    const chart = echarts.init(chartContainer, null, { responsive: true });
    chart.setOption(option);

    // ✅ Đảm bảo biểu đồ tự động resize khi thu nhỏ màn hình
    window.addEventListener("resize", function () {
        chart.resize();
    });
}

document.addEventListener("DOMContentLoaded", fetchTopModelsChart);

document.addEventListener("DOMContentLoaded", function () {
    const container = document.getElementById("top-models-container");
    if (!container) {
        console.error("Lỗi: Không tìm thấy phần tử 'top-models-container'!");
        return;
    }

    // Hiển thị loader trước khi fetch
    const loader = document.createElement("div");
    loader.className = "loader";
    container.appendChild(loader);

    fetch("http://10.220.130.119:9090/api/product/top_models")
        .then(response => response.json())
        .then(data => {
            loader.style.display = "none"; // Ẩn loader khi có dữ liệu

            if (data.success && Array.isArray(data.topModels)) {
                container.innerHTML = ""; // Xóa nội dung cũ
                data.topModels.forEach((model, index) => {
                    const activityItem = `
                        <div class="activity-item d-flex align-items-center p-3 shadow-sm mb-3">
                            <div class="activite-label display-5 fw-bold">${index + 1}</div>
                            <i class="bi bi-star-fill activity-badge text-warning align-self-center mx-3"></i>
                            <div class="activity-content d-flex justify-content-between align-items-center w-100">
                                <span class="model-name fs-4 fw-bold">${model.modelName}</span>
                                <span class="badge bg-primary fs-5 ms-auto">${model.count}</span>
                            </div>
                        </div>
                    `;
                    container.innerHTML += activityItem;
                });
            } else {
                container.innerHTML = "<p>Không có dữ liệu.</p>";
            }
        })
        .catch(error => {
            console.error("Fetch Error:", error);
            loader.style.display = "none";
            container.innerHTML = "<p>Đã xảy ra lỗi khi tải dữ liệu.</p>";
        });
});



//    // Hiển thị loader trước khi fetch
//    const loader = document.createElement("div");
//    loader.className = "loader"; // Đảm bảo bạn đã định nghĩa lớp CSS cho loader
//    document.getElementById("top-models-container").appendChild(loader);

//    fetch("http://10.220.130.119:9090/api/product/top_models")
//        .then(response => response.json())
//        .then(data => {
//            // Ẩn loader khi có dữ liệu
//            loader.style.display = "none";

//            if (data.success && Array.isArray(data.topModels)) {
//                const container = document.getElementById("top-models-container");
//                container.innerHTML = ""; // Xóa nội dung cũ

//                data.topModels.forEach((model, index) => {
//                    const activityItem = `
//                        <div class="activity-item d-flex align-items-center p-3 shadow-sm mb-3">
//                        <div class="activite-label display-5 fw-bold">${index + 1}</div>
//                        <i class="bi bi-star-fill activity-badge text-warning align-self-center mx-3"></i>
//                        <div class="activity-content d-flex justify-content-between align-items-center w-100">
//                            <span class="model-name fs-4 fw-bold">${model.modelName}</span>
//                            <span class="badge bg-primary fs-5 ms-auto">${model.count}</span>
//                        </div>
//                    </div>

//                `;
//                    container.innerHTML += activityItem;
//                });
//            } else {
//                console.error("Invalid data structure or empty data:", data);
//                document.getElementById("top-models-container").innerHTML = "<p>Không có dữ liệu.</p>";
//            }
//        })
//        .catch(error => {
//            console.error("Fetch Error:", error);
//            loader.style.display = "none";
//            document.getElementById("top-models-container").innerHTML = "<p>Đã xảy ra lỗi khi tải dữ liệu.</p>";
//        });


//    let currentPage = 1;  // Trang hiện tại
//    const pageSize = 50;  // Số item mỗi trang

//    // Thêm sự kiện click vào mỗi model
//    document.getElementById("top-models-container").addEventListener("click", async (event) => {
//        const clickedModel = event.target.closest(".activity-item");
//        if (clickedModel) {
//            const modelName = clickedModel.querySelector(".model-name").textContent.trim();
//            await fetchModelData(modelName);
//        }
//    });

//    function populateModelDataTable(data) {
//        const table = $('#model-data-table').DataTable({
//            destroy: true,  // ⚠️ Hủy DataTable cũ
//            paging: false,
//            searching: true,
//            ordering: true,
//            scrollX: true,
//            autoWidth: false,
//            info: false
//        });

//        table.clear();

//        data.forEach(item => {
//            table.row.add([
//                item.serialNumber || "",
//                item.productLine || "",
//                item.modelName || "",
//                item.testCode || "",
//                item.moNumber || "",
//                item.wipGroup || "",
//                item.testGroup || "",
//                item.data1 || "",
//                item.reasonCode || "",
//                item.shelfCode || "",
//                item.columnNumber || "",
//                item.levelNumber || "",
//                item.trayNumber || "",
//                item.positionInTray || "",
//                item.entryDate || "",
//                item.entryPerson || "",
//                item.borrowStatus || "",
//                item.borrowDate || "",
//                item.borrowPerson || "",
//                item.note || ""
//            ]);
//        });

//        table.draw();
//    }


//    // Gọi API AdvancedSearch có phân trang
//    async function fetchModelData(modelName, page = 1) {
//        try {
//            showSpinner();  // Hiển thị loading
//            const response = await fetch(`http://10.220.130.119:9090/api/Search/AdvancedSearch?page=${page}&pageSize=${pageSize}`, {
//                method: "POST",
//                headers: { "Content-Type": "application/json" },
//                body: JSON.stringify({
//                    wipGroup: [],
//                    testCode: "",
//                    data1: "",
//                    sfg: [modelName],
//                    borrowStatus: ""
//                })
//            });

//            if (!response.ok) throw new Error("Không thể lấy dữ liệu!");

//            const result = await response.json();

//            if (result.success && result.results.length > 0) {
//                populateModelDataTable(result.results);
//                setupPagination(result.totalPages);
//                const modal = new bootstrap.Modal(document.getElementById("modelDataModal"));
//                modal.show();
//            } else {
//                alert("Không tìm thấy dữ liệu cho model này.");
//            }
//            hideSpinner();  // Ẩn loading

//        } catch (error) {
//            hideSpinner();  // Ẩn loading
//            console.error("Lỗi khi tải dữ liệu:", error);
//            alert("Lỗi khi tải dữ liệu.");
//        } finally {
//            hideSpinner();  // Ẩn loading
//        }
//    }

//    // Thêm phân trang
//    function setupPagination(totalPages) {
//        const paginationContainer = document.getElementById("pagination-container");
//        paginationContainer.innerHTML = `
//        <button id="prev-page" ${currentPage === 1 ? 'disabled' : ''}>Trước</button>
//        <span>Trang ${currentPage} / ${totalPages}</span>
//        <button id="next-page" ${currentPage === totalPages ? 'disabled' : ''}>Tiếp</button>
//    `;

//        let selectedModelName = "";

//        document.getElementById("top-models-container").addEventListener("click", async (event) => {
//            const clickedModel = event.target.closest(".activity-item");
//            if (clickedModel) {
//                selectedModelName = clickedModel.querySelector(".model-name").textContent.trim();
//                await fetchModelData(selectedModelName);
//            }
//        });

//        document.getElementById("prev-page").onclick = () => {
//            if (currentPage > 1) {
//                currentPage--;
//                fetchModelData(selectedModelName, currentPage);
//            }
//        };

//        document.getElementById("next-page").onclick = () => {
//            if (currentPage < totalPages) {
//                currentPage++;
//                fetchModelData(selectedModelName, currentPage);
//            }
//        };
//    }
//});
